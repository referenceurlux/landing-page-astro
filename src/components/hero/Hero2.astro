---
import { WordpressServices } from "../../data/wordpress";
interface Props {
  slug: string;
}
const { slug } = Astro.props;
const page = await WordpressServices.getPageBySlug(slug);
const bandeau = page.acf.bandeau_hero;
const color = page.acf.couleur_principale;
---

<section class="xl:h-screen w-full relative">
  <img
    class="absolute w-full h-full object-cover aspect-video"
    src={page.acf.background_hero_2.url ? page.acf.background_hero_2.url : null}
    alt={page.acf.background_hero_2.description
      ? page.acf.background_hero_2.description
      : null}
  />
  <div
    class="absolute w-full h-3/4 top-0 left-0 bg-gradient-to-b from-black to-transparent z-2"
  >
  </div>
  <div
    class="absolute w-full h-1/2 bottom-0 left-0 bg-gradient-to-t from-black to-transparent z-2"
  >
  </div>
  <div
    class="container mx-auto flex items-center flex-col justify-center h-auto xl:h-full"
  >
    <div class="grid grid-cols-12 items-center py-24 xl:py-0">
      <div class="col-span-12 xl:col-span-6 z-3 mb-16 xl:mb-0 text-center xl:text-left pt-16 xl:pt-0">
        <div
          data-aos="fade-up"
          class="text-3xl xl:text-5xl text-white font-semibold font-montserrat mb-8"
        >
          <h1>{page.acf.titre_hero_2 ? page.acf.titre_hero_2 : null}</h1>
        </div>
        <a
          data-aos="fade-up"
          data-aos-delay="300"
          class="bg-[--primary-color] font-montserrat text-white font-semibold py-4 px-16 rounded-full transition-all"
          href="#contact">{page.acf.cta_hero_2 ? page.acf.cta_hero_2 : null}</a
        >
      </div>
      <div class="col-span-12 xl:col-span-5 xl:col-end-13 z-3 bg-white/40 p-4 rounded-3xl flex flex-col items-center gap-4">
        <form id="contactForm2" class="flex flex-wrap justify-between gap-4" action="" method="post">
          <input hidden type="email" name="email_client" id="email_client" value={page.acf.email}>
          <input class="p-5 w-full lg:w-[48%] rounded-full outline-none" type="text" name="nom" placeholder="Nom" id="nom">
          <input class="p-5 w-full lg:w-[48%] rounded-full outline-none" type="text" name="prenom" placeholder="Prénom" id="prenom">
          <input class="p-5 w-full lg:w-[48%] rounded-full outline-none" type="email" name="email" placeholder="Email" id="email">
          <input class="p-5 w-full lg:w-[48%] rounded-full outline-none" type="tel" name="telephone" placeholder="Téléphone" id="telephone">
          <textarea class="p-5 rounded-3xl outline-none w-full" name="message" id="message" cols="30" rows="3" placeholder="Message"></textarea>
          <button class="rounded-full border-white bg-transparent border text-white font-semibold py-4 mx-auto px-12 mt-6 hover:bg-white hover:text-[--primary-color] transition-all" type="submit">Envoyer</button>
        </form>
        <svg class="hidden animate-spin loader -ml-1 mr-3 h-5 w-5 text-white mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        <span class="uppercase text-white text-sm border-2 p-1 thanks-message hidden">Merci votre message a bien été envoyé</span>
      </div>
    </div>
  </div>
  <div
    class="relative lg:absolute w-full bottom-0 left-0 bg-[--primary-color] z-3"
  >
    <div
      class="container mx-auto flex gap-8 lg:gap-4 justify-center flex-wrap lg:flex-row xl:justify-between items-center font-montserrat text-white text-xl py-8"
    >
      {
        bandeau
          ? bandeau.map((item) => (
              <div class="flex items-center justify-center text-sm lg:text-base">
                <img
                  class="mr-4"
                  src={item.icone.url}
                  alt={item.icone.description}
                />
                <span>{item.texte}</span>
              </div>
            ))
          : null
      }
    </div>
  </div>
</section>

<script>
  // Écoutez l'événement de soumission du formulaire
  document
    .getElementById("contactForm2")
    ?.addEventListener("submit", function (event) {
      event.preventDefault(); // Empêche l'envoi du formulaire traditionnel
      document.querySelector('.loader')?.classList.remove('hidden');
      // Obtenez les valeurs des champs du formulaire
      var nom = document.getElementById("nom").value;
      var prenom = document.getElementById("prenom").value;
      var email = document.getElementById("email").value;
      var telephone = document.getElementById("telephone").value;
      var message = document.getElementById("message").value;
      var email_client = document.getElementById("email_client").value;

      // Préparez les données à envoyer
      var data = {
        nom: nom,
        prenom: prenom,
        email: email,
        telephone: telephone,
        message: message,
        email_client: email_client,
      };

      // Utilisez Email.js pour envoyer l'e-mail
      emailjs
        .send("service_tyiu5yu", "template_k81m95u", data)
        .then(function (response) {
          console.log("Email envoyé avec succès :", response);
          // Réinitialisez les valeurs des champs après l'envoi
          document.getElementById("nom").value = "";
          document.getElementById("prenom").value = "";
          document.getElementById("email").value = "";
          document.getElementById("telephone").value = "";
          document.getElementById("message").value = "";
          document.getElementById("email_client").value = "";
          document.querySelector('.loader')?.classList.add('hidden');
          document.querySelector('.thanks-message')?.classList.remove('hidden');
        })
        .catch(function (error) {
          console.log("Erreur lors de l'envoi de l'e-mail :", error);
        });
    });
</script>
